{"version":3,"file":"static/js/270.34d3f15c.chunk.js","mappings":"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","sources":["components/Section.js","redux/selectors.js","components/ContactForm.js","components/Filter.js","components/Contact.js","components/ContactList.js","pages/Phonebook.js"],"sourcesContent":["import styled from \"styled-components\";\nimport PropTypes from 'prop-types';\n\nconst StyledTitle = styled.h2`\nmargin-left: 10px;\n`\n\nexport const Section = ({ title, children }) => (\n    <section>\n        <StyledTitle>{title}</StyledTitle>\n        {children}\n    </section>\n)\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired\n}","export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilters = state => state.filters;","import styled from \"styled-components\";\nimport { useDispatch } from \"react-redux\";\nimport { addContact } from \"redux/contacts/operations\";\nimport { useSelector } from \"react-redux\";\nimport { selectContacts } from \"redux/selectors\";\n\nconst StyledForm = styled.form`\nborder: 1px solid black;\npadding: 10px 5px 10px 5px;\nwidth: 300px;\nmargin-left: 10px;\nmargin-bottom: 20px;\n`\nconst StyledLabel = styled.label`\ndisplay: flex;\nflex-direction: column;\n`\n\nconst StyledInput = styled.input`\nmargin-top: 5px;        \nwidth: 200px;\n`\nexport const StyledButton = styled.button`\nmargin-top: 25px;\npadding: 3px 5px 3px 5px;\nbackground-color: white;\nborder: 1px solid rgb(148, 146, 146);\nborder-radius: 3px;\ncursor: pointer;\n:hover {\n    background-color: rgb(79, 158, 215);\n}\n:focus {\n    background-color: rgb(79, 158, 215);\n}\n`\n\nexport const ContactForm = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);\n\n    const checkName = (name) => {\n        const isNameOnList = contacts.some(contact => contact.name.toLowerCase() === name.toLowerCase())\n        return isNameOnList;\n    }\n\n    const checkNumber = (number) => {\n        const isNumberOnList = contacts.some(contact => contact.number === number)\n        return isNumberOnList;\n    }\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const form = e.target;\n        const name = form.elements.name.value;\n        const number = form.elements.number.value;\n        const isNameOnList = checkName(name);\n        const isNumberOnList = checkNumber(number);\n\n        if (isNameOnList) {\n            alert(`${name} is already in contacts`)\n        } else if (isNumberOnList) {\n            alert(`This number ${number} is already in contacts`)\n        } else {\n            const user = { name, number }\n            dispatch(addContact(user));\n        }\n        form.reset();\n\n    }\n\n    return (\n        <StyledForm onSubmit={handleSubmit}>\n            <StyledLabel>\n                Name\n                <StyledInput\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                />\n            </StyledLabel>\n\n            <StyledLabel>\n                Number\n                <StyledInput\n                    type=\"tel\"\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                />\n            </StyledLabel>\n\n            <StyledButton\n                type=\"submit\">\n                Add contact\n            </StyledButton>\n\n        </StyledForm>\n    )\n}","import styled from \"styled-components\";\nimport { useDispatch } from \"react-redux\";\nimport { addWantedValue } from \"redux/filter/filterSlice\";\n\nconst StyledLabel = styled.label`\ndisplay: flex;\nflex-direction: column;\nmargin-left: 10px;\n`\n\nconst StyledInput = styled.input`\nmargin-top: 5px;\nwidth: 200px;\n`\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n\n    const handleChange = e => {\n        const value = e.target.value;\n        dispatch(addWantedValue(value))\n    }\n\n    return (\n        <>\n            <StyledLabel>\n                Find contacts by name\n                <StyledInput\n                    type=\"text\"\n                    onChange={handleChange} />\n            </StyledLabel>\n        </>\n    )\n}","import styled from \"styled-components\";\nimport { StyledButton } from \"./ContactForm\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"redux/contacts/operations\";\nimport PropTypes from \"prop-types\"\n\nconst StyledNumber = styled.span`\nmargin-right: 5px;\nmargin-left: 5px;\n`\nconst StyledName = styled.span`\nfont-weight:bold;\n`\n\nexport const Contact = ({ contact }) => {\n    const dispatch = useDispatch();\n    const handleDelete = () => {\n        dispatch(deleteContact(contact.id))\n    }\n    return (\n        <>\n            <StyledName>{contact.name}</StyledName>\n            <StyledNumber>{contact.number}</StyledNumber>\n            <StyledButton\n                onClick={handleDelete}>\n                Delete\n            </StyledButton>\n        </>\n    )\n}\n\nContact.propTypes = {\n    contact: PropTypes.object.isRequired\n}","import { Contact } from './Contact';\nimport { selectContacts, selectFilters } from 'redux/selectors';\nimport { useSelector } from 'react-redux';\n\nexport const ContactList = () => {\n    const contacts = useSelector(selectContacts);\n\n    const filterValue = (useSelector(selectFilters)).value;\n\n    return (\n        <ul>\n            {contacts.filter(contact => contact.name.toLowerCase().includes(filterValue.toLowerCase())).map(contact => (\n                <li key={contact.id}>\n                    <Contact contact={contact} />\n                </li>\n            ))}\n        </ul>\n    )\n}","//import { useDispatch } from \"react-redux\";\n//import { useEffect } from \"react\";\n//import { fetchTasks } from \"../redux/tasks/tasks.thunk\";\nimport { Section } from \"components/Section\";\nimport { ContactForm } from \"components/ContactForm\";\nimport { Filter } from \"components/Filter\";\nimport { ContactList } from \"components/ContactList\";\n\nconst Phonebook = () => {\n    // const dispatch = useDispatch()\n    // useEffect(() => {\n    //     dispatch(fetchTasks('arg'))\n    // }, [])\n\n    return (\n        <>\n            <Section title=\"Phonebook\">\n                <ContactForm />\n            </Section>\n            <Section title=\"Contacts\">\n                <Filter />\n                {/* {isLoading && !error &&\n                    <StyledNotification>\n                        Request in progress...\n                    </StyledNotification>} */}\n                <ContactList />\n            </Section>\n        </>\n    );\n};\n\nexport default Phonebook;"],"names":["StyledTitle","styled","Section","title","children","selectContacts","state","contacts","items","selectFilters","filters","StyledForm","StyledLabel","StyledInput","StyledButton","ContactForm","dispatch","useDispatch","useSelector","onSubmit","e","preventDefault","form","target","name","elements","value","number","isNameOnList","some","contact","toLowerCase","checkName","isNumberOnList","checkNumber","alert","user","addContact","reset","type","pattern","required","Filter","onChange","addWantedValue","StyledNumber","StyledName","Contact","onClick","deleteContact","id","ContactList","filterValue","filter","includes","map"],"sourceRoot":""}